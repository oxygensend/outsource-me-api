# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
        mailer_from_address: '%env(MAILER_FROM_ADDRESS)%'
        mailer_from_name: '%env(MAILER_FROM_NAME)%'
        redirect_after_confirmation: '%env(CLIENT_HOST)%'
        redirect_after_oauth2: '%env(REDIRECT_AFTER_OAUTH)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\State\UserRegistrationProcessor:
        bind:

            $decoratedProcessor: '@ApiPlatform\Doctrine\Common\State\PersistProcessor'
    # add more service definitions when explicit configuration is needed

    App\ArgumentResolver\RequestDtoValueResolver:
      tags:
        - {name: controller.argument_value_resolver, priority: 50}

    App\OpenApi\TokenCreateOpenApiHelper:
      decorates: 'api_platform.openapi.factory'
      arguments: ['@.inner']

    App\OpenApi\TokenRefreshOpenApiHelper:
      decorates: 'api_platform.openapi.factory'
      arguments: [ '@.inner' ]

    App\OpenApi\OAuth2GoogleConnectionOpenApiHelper:
      decorates: 'api_platform.openapi.factory'
      arguments: [ '@.inner' ]
